---
import { getCollection, getEntry } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Components from "@/components/Components.astro";
import FeatureBox from "@/components/FeatureBox.astro";

// This function tells Astro to build a page for every entry in your content collection
export async function getStaticPaths() {
	const pageEntries = await getCollection("pages");

	let finalList = pageEntries
		.filter((entry) => entry.slug.indexOf("/") != -1)
		.map((entry) => ({
			params: { slug: entry.slug },
			props: { entry },
		}));

	// add custom path for apps page because it's hardcoded in the card
	// as `tejory.io/apps.html`
	pageEntries.filter((entry) => entry.slug == "en/apps").map((entry => {
		finalList.push(
			{
				params: { slug: "apps.html" },
				props: { entry },
			}
		);
	}));

	return finalList;
}

// Get the specific page data for the current page
const { entry } = Astro.props;

// Get the rendered HTML content from the markdown
const { Content } = await entry.render();
const lang = Astro.currentLocale;
const featureList = (
	await Promise.all(
		entry.data.features?.map(async (featureSlug) => {
			const fullSlug = `${lang}/${featureSlug}`;

			const featureEntry = await getEntry("features", fullSlug);
			if (!featureEntry) {
				return;
			}
			const { Content } = await featureEntry.render();
			return {
				name: featureEntry.data.name,
				Content: Content,
				icon: featureEntry.data.custom_icon || featureEntry.data.icon,
			};
		}) ?? [],
	)
).filter((entry) => entry != null && entry != undefined);
---

<Layout title={entry.data.name} lang={lang} slug={entry.slug}>
	<Components components={entry.data.top_components} />
	<main class="px-8 mt-8 max-w-7xl mx-auto">
		<div class="flex flex-wrap justify-center gap-8">
				{
					featureList?.map((feature) => (
						<FeatureBox feature={feature} />
					))
				}
			</div>
		<article>
			<Content />
		</article>
	</main>
	<Components components={entry.data.bottom_components} />
</Layout>
