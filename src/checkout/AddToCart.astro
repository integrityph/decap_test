---
import { getT } from "@/i18n/t";
import { defaultLang } from "@/i18n/ui";

const lang = Astro.currentLocale || defaultLang;
const t = getT(lang);

// The 'product' prop is still passed for the button's data attributes.
const { product } = Astro.props;
---
<button 
    class="add-to-cart-btn inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-zinc-900 bg-amber-500 hover:bg-amber-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-zinc-900 focus:ring-amber-500 transition-transform transform hover:scale-105"
    data-product-id={product.slug}
    data-product-name={product.data.name}
    data-product-price={product.data.discounted_price || product.data.price}
    data-product-image={product.data.image1}
>
    {t("Add to Cart")}
</button>

<script is:inline>
    // This script is now plain vanilla JS, with no imports.
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', (event) => {
            const btn = event.currentTarget;
            const item = {
                id: btn.dataset.productId,
                name: btn.dataset.productName,
                price: parseFloat(btn.dataset.productPrice),
                imageSrc: btn.dataset.productImage,
            };

            // 1. Get the current cart from localStorage
            let cart = JSON.parse(localStorage.getItem('cart') || '{}');

            // 2. Add or update the item
            if (cart[item.id]) {
                cart[item.id].quantity++;
            } else {
                cart[item.id] = { ...item, quantity: 1 };
            }

            // 3. Save the updated cart back to localStorage
            localStorage.setItem('cart', JSON.stringify(cart));
            
            // 4. Announce that the cart has been updated to any other components listening
            window.dispatchEvent(new CustomEvent('cart-updated'));

            // Optional: Add some visual feedback
            const originalText = btn.innerHTML;
            btn.innerHTML = 'Added!';
            setTimeout(() => { btn.innerHTML = originalText; }, 1500);
        });
    });
</script>

