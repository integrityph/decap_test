---
import { getT } from "@/i18n/t";
import { defaultLang } from "@/i18n/ui";
import type { ACTION_ERROR_CODES } from "astro:actions";
import { getCollection } from "astro:content"

const lang = Astro.currentLocale || defaultLang;

const t = getT(lang);

const faqList = await getCollection("faq");
const faqEntries = await Promise.all(faqList
	.filter(entry => entry.slug.split("/").includes(lang))
	.sort((a,b) => a.data.order - b.data.order)
	.map(async entry => {
		const { Content } = await entry.render();
		return {
			data:entry.data,
			Content: Content,
		}
	})
);

const buttonClasses = [
	"flex",
	"items-center",
	"justify-between",
	"w-full",
	"p-5",
	"font-medium",
	"rtl:text-right",
	"text-zinc-500",
	"border",
	"border-zinc-200",
	"focus:ring-4",
	"focus:ring-zinc-200",
	"dark:focus:ring-zinc-800",
	"dark:border-zinc-700",
	"dark:text-zinc-400",
	"hover:bg-zinc-100",
	"dark:hover:bg-zinc-800",
	"gap-3",
	"cursor-pointer",
]

const firstButtonClasses = [
	"rounded-t-xl",
]

const lastButtonClasses = [
	"rounded-b-xl",
]

const answerClasses = "p-5 border border-b-0 border-zinc-200 dark:border-zinc-700 dark:bg-zinc-900";
const lastAnswerClasses = "p-5 border border-zinc-200 dark:border-zinc-700 dark:bg-zinc-900";
---
<h2>{t("faq")}</h2>
<div id="accordion-collapse" data-accordion="collapse">
	{
		faqEntries.map((entry, index, array) => {
		const finalButtonClasses = [...buttonClasses];
		const finalAnswerClasses = index === array.length - 1 ? lastAnswerClasses : answerClasses;
		if (index === 0) {
			finalButtonClasses.push(...firstButtonClasses);
		}
		if (index === array.length - 1) {
			finalButtonClasses.push(...lastButtonClasses);
		} else {
			finalButtonClasses.push("border-b-0");
		}
    return (
      <div>
        <div id={`accordion-collapse-heading-${index}`}>
          <button 
            type="button" 
            class={finalButtonClasses.join(" ")} 
            data-accordion-target={`#accordion-collapse-body-${index}`} 
            aria-expanded="false" 
            aria-controls={`accordion-collapse-body-${index}`}
          >
            <span class="text-2xl text-start">{entry.data.question}</span>
            <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5 5 1 1 5"/>
            </svg>
          </button>
        </div>
        <div id={`accordion-collapse-body-${index}`} class="hidden" aria-labelledby={`accordion-collapse-heading-${index}`}>
          <div class={finalAnswerClasses}>
            <div class="mb-2 text-zinc-500 dark:text-zinc-300 space-y-8 faq">
              <entry.Content />
            </div>
          </div>
        </div>
      </div>
    );
  })
	}
</div>

<script is:inline>
const accordionButtons = document.querySelectorAll("button[data-accordion-target]");

accordionButtons.forEach((button, index) => {
  button.addEventListener("click", () => {
    const targetSelector = button.getAttribute('data-accordion-target');
    const targetPanel = document.querySelector(targetSelector);

    if (!targetPanel) return;

    targetPanel.classList.toggle('hidden');

		// slip the chevron
		const icon = button.querySelector('[data-accordion-icon]');
		if (icon) {
			icon.classList.toggle('rotate-180');
		}

    if (index === accordionButtons.length - 1) {
      button.classList.toggle('rounded-b-xl');
    }
  });
});
</script>